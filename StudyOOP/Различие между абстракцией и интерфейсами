Различия.

1) Интерфейс описывает только поведение. У него нет состояния. А у абстрактого класса состояние есть: он
описывает и то, и другое.

2) Абстрактный класс связывает между собой и объединяет классы, имеющие очень близкую связь. В то же время,
один и тот же интерфейс могут реализовать классы, у которых вообще нет ничего общего.
Интерфейс иделаьно подходит для описания всего на свете.

3) Классы могут реализовывать сколько угодно интерфейсов, но наследоваться можно только от одного класса.

4) Смысл, логика создания такой сущности как интерфейс (и как следствие - все его синтаксические отличия
от абстрактного класса) заключается в том, что возникла острая необходимость создать элемент языка
программирования, который будет обладать всем функционалом КЛАССА, но КЛАССОМ при этом являться НЕ БУДЕТ!
(да да, тому кто когда-нибудь скажет вам что "интерфейс - это класс, у которого все методы абстрактные" - смело
выписывайте подзатыльник, ибо интерфейс - это не класс, это - интерфейс)

5) Абстрактные классы могут иметь методы с реализацией, тогда как интерфейс обеспечивает абсолютную абстракцию
и не может иметь каких-либо реализаций метода.

6) Абстрактные классы могут иметь конструкторы; интерфейсы не могут иметь конструкторов.

7) У абстрактного класса есть все черты обычного Java-класса, за исключением того, что мы не можем создать его
экземпляр. Мы можем использовать ключевое слово abstract чтобы создать абстрактный класс. Интерфейс может иметь
только статические public static final константы и объявления методов.

8) Абстрактный класс может унаследоваться только от одного класса и любого количества интерфейсов.
Интерфейс не может наследоваться от классов, но может от любого количества интерфейсов.

9) Абстрактный класс может содержать абстрактные методы. Но может и не содержать их вообще.
Все методы интерфейса – абстрактные – не содержат реализации. Интерфейс может не содержать никаких
методов вообще.

10) Абстрактный класс может содержать методы с реализацией. Интерфейс не может содержать методы с реализацией.