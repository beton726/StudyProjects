singleton: Singleton - создаёт объект в единственном экземпляре.

proxy: Прокси (с англ. Уполномоченный) - имитирует целевой класс, наследуясь от того же интерфейса и имея сходный конструктор. Создаёт объект целевого класса и при вызове его методов может выполнять дополнительные действия.

Декоратор (согласно ссылке также называется Обёрткой) - наследуется от того же интерфейса, что и целевой класс. Получает в конструктор объект этого класса и при вызове методов может выполнять дополнительные действия.

Фасад - в полной мере реализует понятие инкапсуляции, "объединяя" несколько классов в один, вызывает их методы. Например, используется в MVC: контроллер имеет дело не со всей моделью, а только с её фасадом. Вместо создания нескольких объектов, необходимо создать только объект фасада, у которого внутри будут проинициализированы объекты всех необходимых классов.

Шаблонный метод - используется при наличии нескольких классов, в которых существует сходная пошаговая логика. Он разбивает всю логику на методы, реализация которых лежит уже на плечах конкретных классов, а также имеет реализованный метод, в котором последовательно вызываются все методы, на которые были разбиты шаги алгоритма. Этот главный метод не переопределяется в классах-наследниках.